let MathX = (function () {

    return {
        /*
        Функция fib возвращает n-е число Фибоначчи:
        для этого нужен цикл, который начнёт с 1 и 2, затем из них получит fib(3) как их сумму, 
        затем fib(4) как сумму предыдущих значений, затем fib(5) и так далее, до финального результата. 
        На каждом шаге нам нужно помнить только значения двух предыдущих чисел последовательности.
        Цикл начинается с i=3, потому что первое и второе значения последовательности заданы a=1, b=1.
        */
        fibNum: function (n) {
            let a = 1;
            let b = 1;
            for (let i = 3; i <= n; i++) {
                let c = a + b;
                a = b;
                b = c;
            }
            return b;
        },

        /*
        Функция fibRow возвращает все числа в ряду Фибоначчи до числа n:
        принцип похож на предыдущую функцию, нам уже известны первые 2 значения ряда и их сумма как result. 
        Получаем сумму предыдущих значений (далее прибавляем ее к result) и перезаписываем их.   
        */
        fibRow: function (n) {
            let a = 1;
            let b = 1;
            let result = a + ' ' + b + ' ';
            for (var i = 3; i <= n; i++) {
                var c = a + b;
                a = b;
                b = c;
                result += c + ' ';
            }

            //проверка на уже известные значения
            if (n == 1) {
                result = 1 + ' ';
            } else if (n == 2) {
                result = 1 + ' ' + 1 + ' ';
            }
            return result;
        },

        /*
        Функция simpleNum вычисляет N-е просте число:
        Натуральное число, большее 1, называется простым, если оно ни на что не делится, кроме себя и 1.
        Используем цикл для проверки.  
        */
        simpleNum: function (n) {
            for (let i = 2; i < n; i++) {
                /*
                 если n делится на 0 без остатка, то это не простое число 
                (n > 1 – простое, если при его делении на любое число кроме 1 и n есть остаток)
                */
                if (n % i === 0) return false;
            }
            return n !== 1;
        },

        /*
        Функция simpleRow(n) вычисляет все простые числа до числа N:
        Используем вложенные циклы (с использованием метки) - Для всех i
        проверить, делится ли число i на какое-либо из чисел до него
        если делится, то это i не подходит, берём следующее
        если не делится, то i - простое число.  
        */
        simpleRow: function (n) {
            nextPrime: for (let i = 2; i <= n; i++) { // Для всех i

                for (let j = 2; j < i; j++) { // проверить, делится ли число
                    if (i % j == 0) continue nextPrime; // не подходит, берем следующее
                }

                console.log(i); // простое число 
            }
        }
    }
})();

// результат (раскомментировать для проверки):

/*
console.log(MathX.fibNum(7));
console.log(MathX.fibRow(7))
console.log(MathX.simpleNum(5));
console.log(MathX.simpleRow(5));
*/

export {
    MathX
};