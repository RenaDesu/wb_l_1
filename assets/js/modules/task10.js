/*
Реализовать функцию конвертации строки в JSON со всеми необходимыми проверками и валидациями.
*/

//JSON для проверки
const JSON_STRING = '[{"band": "Depeche Mode","title": "Enjoy The Silence","year": 1990},{"band": "Depeche Mode","title": "Precious","year": 2005},{"band": "Depeche Mode","title": "It`s No Good","year": 1997},{"band": "Depeche Mode","title": "Personal Jesus","year": 1990}]';
//сначала разбираем строку JSON и приводим ее к строке, из которой может получиться валидный JS объект
function parseInput(input) {
    //для записи результата
    let output;
    //делаем из входящей строки массив, чтобы была возможность пройтись по каждому элементу (символу)
    input = Array.from(input);
    //проходимся циклом по элементам и убираем кавычки у ключей
    for (let i = 0; i < input.length; i++) {
        if (input[i] == '{') {
            input[i + 1] = '';
        }
        if (input[i] == ':') {
            input[i - 1] = '';
        }
        if (input[i] == ',' && input[i + 1] == '"') {
            input[i + 1] = ' ';
        }
        //а тут добавляем пробел между "объектами"
        if (input[i] == '}' && input[i + 1] == ',') {
            input[i + 1] = ', ';
        }
    }
    //превращаем в строку JS полученный результат
    input = input.join('');

    output = input;
    //возвращаем полученную строку JS
    return output;
}

/*
Для конвертации обычной строки JS в объект JS очень помог этот источник:
https://stackoverflow.com/questions/1086404/string-to-object-in-js

Нашла там прекрасную функцию strToObj, которая решила проблему конвертации
*/
//на вход функция принимает строку и возвращает объект
function strToObj(e) {
    //проверка: если на вход пришла строка
    if (typeof e == 'string') {
        /*
        честно признаюсь, что пока не понимаю до конца эту часть кода 
        и хотела бы разобраться (точнее подтвердить, правильно ли я поняла механизм). 
        Пока мысли такие (основываясь на материалах и комментариях, что удалось найти):
        new Function() парсит то, что пришло в строке и возвращает результат, а у нас в строке
        передается return и строка из функции parseInput, а значит на выходе получится, что
        функция вернет уже не строку из parseInput, а "уберет кавычки" и вернет массив с объектами
        */
        let obj = new Function('return' + e);
        //тут использовано try catch для случаев обработки ошибок, если на вход strToObj придет не строка с объектом
        try {
            return obj();
        } catch {
            console.log('Необходимы корректировки, невозможна конвертация в объект');
        }
    } else {
        //если на вход пришла не строка, то сообщаем об этом
        console.log('Это не строка');
    }
};
// результат (раскомментировать для проверки):

/*
//тут для наглядности в консоль выводится полученная строка JS (в которой "массив с объектами")
console.log(parseInput(JSON_STRING));

//тут создаем переменную и записываем в нее результат работы функции parseInput (строку)
const newObj = parseInput(JSON_STRING);

//а тут уже выводим в консоль полученный из строки массив с объектами
console.log(strToObj(newObj));
*/